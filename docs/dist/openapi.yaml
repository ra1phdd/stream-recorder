swagger: "2.0"
info:
    version: 2.0.0
    title: stream-recorder
    description: '
        <p>Проект представляет собой API для управления стримами, включая добавление, удаление, список и принудительную обрезку.</p>

        <p>По вопросам работы с API обращайтесь <a href="https://t.me/ra1ph_d">сюда</a>.</p>
        <p>Если вы обнаружили ошибку или у вас есть предложения по улучшению, создавайте issue на <a href="https://github.com/ra1phdd/GetYTStatsAPI">GitHub</a>.</p>

        <h2>Как работать с документацией?</h2>
        <p>Для отправки запросов к API нажмите на кнопку Try it out и заполните необходимые поля для составления нужного фильтра.
        После заполнения полей нажмите на кнопку Execute и получите ответ от API и пример запроса.</p>'
host: 127.0.0.1:8000
basePath: /
schemes:
  - http
paths:
  /streamer/add:
    get:
      summary: "Добавить стримера"
      description: "Добавляет стримера в базу данных (требует параметры - платформа (пример: twitch, youtube, kick и т.д.), имя пользователя и качество (пример: best, 1080p, 720p))."
      operationId: addStreamer
      parameters:
        - name: platform
          in: query
          required: false
          type: string
          description: "Название платформы стримера"
        - name: username
          in: query
          required: false
          type: string
          description: "Имя пользователя стримера"
        - name: quality
          in: query
          required: false
          type: string
          description: "Качество потока"
      responses:
        '200':
          description: "Успешное добавление стримера"
          schema:
            type: string
  /streamer/delete:
    get:
      summary: "Удалить стримера"
      description: "Удаляет стримера из базы данных (требует параметры - платформа (пример: twitch, youtube, kick и т.д.), имя пользователя)."
      operationId: deleteStreamer
      parameters:
        - name: platform
          in: query
          required: false
          type: string
          description: "Название платформы стримера"
        - name: username
          in: query
          required: false
          type: string
          description: "Имя пользователя стримера"
      responses:
        '200':
          description: "Успешное удаление стримера"
          schema:
            type: string
  /streamer/list:
    get:
      summary: "Список стримеров"
      description: "Получение списка всех стримеров, добавленных в базу данных."
      operationId: listStreamers
      responses:
        '200':
          description: "Успешное получение списка стримеров"
          schema:
            type: array
            items:
              type: string
  /stream/cut:
    get:
      summary: "Обрезка потока"
      description: "Позволяет обрезать поток в нужный момент (требует параметры - платформа (пример: twitch, youtube, kick и т.д.), имя пользователя)."
      operationId: cutStream
      parameters:
        - name: platform
          in: query
          required: false
          type: string
          description: "Название платформы потока"
        - name: username
          in: query
          required: false
          type: string
          description: "Имя пользователя потока"
      responses:
        '200':
          description: "Успешное выполнение обрезки потока"
          schema:
            type: string